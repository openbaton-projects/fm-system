/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories { mavenCentral() }
    dependencies { classpath("se.transmode.gradle:gradle-docker:1.2") }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.5'
    id 'net.researchgate.release' version '2.3.4'
    id 'nebula.ospackage' version '4.5.1'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

apply plugin: 'application'
apply plugin: 'docker'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/releases/'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://repository.jboss.org'
    }
}

apply from: 'gradle/gradle/git.helpers.gradle'
apply from: 'gradle/gradle/distribution.gradle'
apply from: 'gradle/gradle/command.line.helper.gradle'
apply from: 'gradle/gradle/packaging.fms.docker.gradle'
apply from: 'gradle/gradle/git.release.gradle'

project.ext{
    openbatonVersion = '6.0.1-SNAPSHOT'
    //------------------------------------------------//
    /**
     * Application Related Version
     */
    applicationVersion = version

    applicationRelease = isApplicationRelease()
    applicationDate = new Date()
    applicationRevision = getRevision()

    applicationVersionSnapshot = (!applicationRelease) ? ".${asUTC(applicationDate, 'yyyyMMdd')}.git${applicationRevision}" : ""
    applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"
    //------------------------------------------------//
}
apply from: 'gradle/gradle/packaging.fms.debian.gradle'

dependencies {

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-amqp'


    compile('org.openbaton:sdk:'+ openbatonVersion){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    }

    compile('org.openbaton:monitoring:'+ openbatonVersion){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    }

    compile 'org.kie:kie-spring:6.3.0.Final'
    compile 'com.google.code.gson:gson:2.8.0'

    runtime 'org.mariadb.jdbc:mariadb-java-client:1.6.2'

    testCompile 'junit:junit:4.12'
}

compileJava.dependsOn tasks.googleJavaFormat
